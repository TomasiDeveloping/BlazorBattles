@page "/register"
@using BlazorBattles.Shared
@using BlazorBattles.Client.Services
@inject IUnitService UnitService;
@inject NavigationManager NavigationManager;
@inject IAuthService AuthService;
@inject IToastService ToastService;

<h3>Register</h3>

<EditForm Model="user" OnValidSubmit="HandleRegistration">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <div class="form-group">
        <label for="email">Email</label>
        <InputText id="email" @bind-Value="user.Email" class="form-control"></InputText>
        <ValidationMessage For="() => user.Email"></ValidationMessage>
    </div>
    <div class="form-group">
        <label for="username">Username</label>
        <InputText id="username" @bind-Value="user.Username" class="form-control"></InputText>
        <ValidationMessage For="() => user.Username"></ValidationMessage>
    </div>
    <div class="form-group">
        <label for="password">Password</label>
        <InputText type="password" id="password" @bind-Value="user.Password" class="form-control"></InputText>
        <ValidationMessage For="() => user.Password"></ValidationMessage>
    </div>
    <div class="form-group">
        <label for="confirmPassword">Confirm Password</label>
        <InputText type="password" id="confirmPassword" @bind-Value="user.ConfirmPassword" class="form-control"></InputText>
        <ValidationMessage For="() => user.ConfirmPassword"></ValidationMessage>
    </div>
    <div class="form-group">
        <label for="bio">Bio</label>
        <InputTextArea id="bio" @bind-Value="user.Bio" class="form-control"></InputTextArea>
    </div>
    <div class="form-group">
        <label for="bananas">Bananas</label>
        <InputNumber id="bananas" @bind-Value="user.Bananas" class="form-control"></InputNumber>
        <ValidationMessage For="() => user.Bananas"></ValidationMessage>
    </div>
        <div class="form-group">
            <label for="startUnit">Start Unit</label>
            <InputSelect id="startUnit" @bind-Value="user.StartUnitId" class="form-control">
                @foreach (var unit in UnitService.Units)
                {
                    <option value="@unit.Id.ToString()">@unit.Title</option>
                }
            </InputSelect>
        </div>
    <div class="form-group">
        <label for="dateOfBirth">Date of Birth</label>
        <InputDate id="dateOfBirth" @bind-Value="user.DateOfBirth" class="form-control"></InputDate>
    </div>
    <div class="form-check">
        <InputCheckbox id="confirmed" @bind-Value="user.IsConfirm" class="form-check-input"></InputCheckbox>
        <label for="confirmed">Confirmed</label>
        <ValidationMessage For="() => user.IsConfirm"></ValidationMessage>
    </div>
    <button class="btn btn-primary" type="submit">Register</button>
</EditForm>

@code {
    UserRegister user = new UserRegister();

    async void HandleRegistration()
    {
        var result = await AuthService.Register(user);
        if (result.Success)
        {
            ToastService.ShowSuccess(result.Message);
            NavigationManager.NavigateTo("");
        }
        else
        {
            ToastService.ShowError(result.Message);
        }
        
    }
    protected override async Task OnInitializedAsync()
    {
        await UnitService.LoadUnitsAsync();
    }
}